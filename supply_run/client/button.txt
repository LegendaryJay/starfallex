--@name Button
--@author Lil'Tugboat
--@shared

local Button = class("Button")

function Button:initialize(text, callback)
    self.x = 0
    self.y = 0
    self.w = 0
    self.h = 0
    
    self.pressed = false
    self.hovered = false
    self.disabled = false
    
    self.text = text or ""
    self.textColor = Color(200,250,250)
    self.baseColor = Color(0, 60, 60)
    self.hoverColor = Color(0, 120, 120) 
    self.pressColor = Color(0, 180, 180)
    self.disabledColor = Color(100, 100, 100)
    self.buttonShadowColor = Color(0, 40, 40)
    
    self.callback = callback or function() end
end

function Button:setText(text, color)
    self.text = text
    self.textColor = color or self.textColor
end

function Button:setTextColor(color)
    self.textColor = color
end

function Button:setBaseColor(color)
    self.baseColor = color
end

function Button:setHoverColor(color)
    self.hoverColor = color
end

function Button:setPressColor(color)
    self.pressColor = color
end

function Button:setDisabledColor(color)
    self.disabledColor = color
end

function Button:setDisabled(isDisabled)
    self.disabled = isDisabled
end

function Button:setButton(x, y, w, h, text)
    self.x = x or self.x
    self.y = y or self.y
    self.w = w or self.w
    self.h = h or self.h
    self.text = text or self.text
end

function Button:isHovered(cx, cy)
    return cx and cy and cx >= self.x and cx <= self.x + self.w and cy >= self.y and cy <= self.y + self.h
end

function Button:draw()
    local bgColor = self.disabled and self.disabledColor or self.baseColor
    if not self.disabled then
        if self.pressed then
            bgColor = self.pressColor
        elseif self.hovered then
            bgColor = self.hoverColor
        end
    end
    
    local pressedOffset = self.pressed and 0 or 1
    
    -- Draw button shadow
    render.setColor(self.buttonShadowColor)
    render.drawRect(self.x, self.y, self.w, self.h)
    
    -- Draw button
    render.setColor(bgColor)
    render.drawRect(self.x - pressedOffset, self.y - pressedOffset, self.w, self.h)
    
    -- Draw Button Label
    render.setColor(self.textColor)
    render.drawSimpleText(self.x + self.w / 2 - pressedOffset, self.y + self.h / 2 - pressedOffset, self.text, TEXT_ALIGN.CENTER, TEXT_ALIGN.CENTER)
end

function Button:update()
    if self.disabled then return end

    local cx, cy = render.cursorPos()
    if cx and cy then
        self.hovered = self:isHovered(cx, cy)
    end
    
    if player():keyDown(IN_KEY.USE) and self.hovered and not self.pressed then
        self.pressed = true
        self.callback()
    elseif not player():keyDown(IN_KEY.USE) and self.pressed then
        self.pressed = false
    end
end

return Button