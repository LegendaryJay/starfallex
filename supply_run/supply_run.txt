--@name Supply Run
--@author Lil'Tugboat
--@include https://raw.githubusercontent.com/Jacbo1/Public-Starfall/main/SafeNet/safeNet.lua as SafeNet
--@shared
local net = require("SafeNet")

if SERVER then
    --@include supply_run/server/controller.txt
    local Controller = require("supply_run/server/controller.txt")
   local products = {
        ["Documents"] = {
            entitySetup = {
                color = Color(255, 255, 255),
                model = "models/props_junk/garbage_newspaper001a.mdl",
                weight = 5,
                mat = "",
                skin = 0,
            }
        },
        ["Concrete Small"] = {
            entitySetup = {
                model = "models/props/de_prodigy/concretebags4.mdl",
                weight = 200,
                skin = 0,
            }
        },
        ["Concrete Medium"] = {
            entitySetup = {
                model = "models/props/de_prodigy/concretebags3.mdl",
                weight = 400,
                skin = 0,
            }
        },
        ["Concrete Large"] = {
            entitySetup = {
                model = "models/props/de_prodigy/concretebags2.mdl",
                weight = 600,
                skin = 0,
            }
        },
        ["Concrete Huge"] = {
            entitySetup = {
                model = "models/props/de_prodigy/concretebags.mdl",
                weight = 600,
                skin = 0,
            }
        },
        ["Junk Car"] = {
            entitySetup = {
                model = "models/props_vehicles/car002b_physics.mdl",
                weight = 1500,
                skin = 0,
            }
        },
        ["Pills"] = {
            entitySetup = {
                model = "models/props_lab/jar01a.mdl",
                weight = 5,
                skin = 0,
            }
        },
        ["Silo"] = {
            entitySetup = {
                model = "models/props_silo/fuel_cask.mdl",
                weight = 2000,
                skin = 0,
            }
        },
        ["Hay"] = {
            entitySetup = {
                model = "models/props/de_inferno/hay_bails.mdl",
                weight = 100,
                skin = 0,
            }
        },
        ["Box"] = {
            entitySetup = {
                model = "models/props_junk/cardboard_box003a.mdl",
                weight = 10,
                skin = 0,
            }
        }
                 
    }

    local jobs = {
        {
            item = "Documents",
            origin = "Spawn Office",
            destination = "Police Station",
            cost = 10,
            pay = 20,
        },
        {
            item = "Concrete Small",
            origin = "Factory",
            destination = "Construction Site",
            cost = 1500,
            pay = 3500,
        },
        {
            item = "Concrete Medium",
            origin = "Factory",
            destination = "Construction Site",
            cost = 2500,
            pay = 7000,
        },
        {
            item = "Concrete Large",
            origin = "Factory",
            destination = "Construction Site",
            cost = 3500,
            pay = 9500,
        },
        {
            item = "Concrete Huge",
            origin = "Factory",
            destination = "Construction Site",
            cost = 4500,
            pay = 11000,
        },
        {
            item = "Junk Car",
            origin = "Dealership",
            destination = "Junk Shed",
            cost = 13000,
            pay = 30000,
        },
        {
            item = "Pills",
            origin = "Hospital",
            destination = "Big House",
            cost = 60,
            pay = 130,
        },
        {
            item = "Silo",
            origin = "Hardware Store",
            destination = "Farm",
            cost = 70000,
            pay = 200000,
        },
        {
            item = "Hay",
            origin = "Farm",
            destination = "OFC",
            cost = 500,
            pay = 1200,
        },
        {
            item = "Box",
            origin = "County Post",
            destination = "Big House",
            cost = 500,
            pay = 1300,
        },
    }

        
    
    local defaultSettings = {
        DropPlatform = {
            entitySetup = {
                mat = "phoenix_storms/stripes",
                modal = "",
                weight = 2500,
            },
            radius = 50
        },
        ShopScreen = {
            entitySetup = {
                model = "models/sprops/rectangles_superthin/size_4_5/rect_42x42.mdl",
                mat =   "editor/flat"
            } 
        },
        SpawnPlatform = {
            entitySetup = {
                model = "models/sprops/rectangles/size_5/rect_48x48x3.mdl",
                mat = "phoenix_storms/stripes",
                weight = 2500,
                skin = 0,
            }
        },
        
        Economy = {
            startingCash = 100000000
        
        },
        
    }
    
    local snapshot = {
        map = "rp_newexton2_v4h",
        state = {
            {
                type = "SpawnPlatform",
                name = "Spawn Office",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(-10326, 6121, 1025)
            },
            {
                type = "ShopScreen",
                name = "Spawn Office",
                ang = Angle(0, 180, 90),  -- Adjust angle as needed
                pos = Vector(-10246, 6149, 1085)
            },
            {
                type = "DropPlatform",
                name = "Police Station",
                ang = Angle(),  -- Default angle
                pos = Vector(-7126, 7596, 1025),

            },
            {
                type = "SpawnPlatform",
                name = "Factory",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(1079, 3740, -6)
            },
            {
                type = "ShopScreen",
                name = "Factory",
                ang = Angle(0, 180, 90),  -- Adjust angle as needed
                pos = Vector(1225, 3783, 50)
            },
            {
                type = "DropPlatform",
                name = "Construction Site",
                ang = Angle(),  -- Default angle
                pos = Vector(9139, 4860, 1017),

            },
            {
                type = "SpawnPlatform",
                name = "Dealership",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(-7881, -9098, 1017)
            },
            {
                type = "ShopScreen",
                name = "Dealership",
                ang = Angle(0, 90, 90),  -- Adjust angle as needed
                pos = Vector(-8064, -9006, 1071)
            },
            {
                type = "DropPlatform",
                name = "Junk Shed",
                ang = Angle(),  -- Default angle
                pos = Vector(-6251, -8320, -518),

            },
            {
                type = "SpawnPlatform",
                name = "Hospital",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(5678, 5972, 1025)
            },
            {
                type = "ShopScreen",
                name = "Hospital",
                ang = Angle(0, -90, 90),  -- Adjust angle as needed
                pos = Vector(5758, 6056, 1087)
            },
            {
                type = "DropPlatform",
                name = "Big House",
                ang = Angle(),  -- Default angle
                pos = Vector(6334, 9848, 1529),

            },
            {
                type = "SpawnPlatform",
                name = "Hardware Store",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(-876, -12623, 1025)
            },
            {
                type = "ShopScreen",
                name = "Hardware Store",
                ang = Angle(0, -90, 90),  -- Adjust angle as needed
                pos = Vector(-792, -12392, 1080)
            },
            {
                type = "DropPlatform",
                name = "Farm",
                ang = Angle(),  -- Default angle
                pos = Vector(-7918, -271, -518),

            },
            {
                type = "SpawnPlatform",
                name = "Farm",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(-8277, 1900, -517)
            },
            {
                type = "ShopScreen",
                name = "Farm",
                ang = Angle(0, 180, 90),  -- Adjust angle as needed
                pos = Vector(-8144, 1773, -467)
            },
            {
                type = "DropPlatform",
                name = "OFC",
                ang = Angle(),  -- Default angle
                pos = Vector(-8639, -14566, 1017),

            },
                        {
                type = "SpawnPlatform",
                name = "County Post",
                ang = Angle(),  -- Assuming Angle() initializes to a default angle
                pos = Vector(-6083, -11845, -518)
            },
            {
                type = "ShopScreen",
                name = "County Post",
                ang = Angle(0, 0, 90),  -- Adjust angle as needed
                pos = Vector(-5959, -11649, -453)
            },
        }
    }
    
    local config = {
        products = products,
        jobs = jobs,
        defaults = defaultSettings,
        snapshot = snapshot
    }
        
    
    -- buttons/button14.wav -- happy beep 
    -- common/wpn_denyselect.wav -- sad beep
    -- buttons/button18.wav -- sad beep
    -- hitmarkers/mlghit.wav spawn?
    -- hl1/ambience/labdrone2.wav trouble spawning?
    -- NPC_Alyx.Vend_Coin sale?
    local controller = Controller:new(config)

    
else
    --@include supply_run/client/client_controller.txt
    timer.create("init delay", 1, 1, function() 
        local client = require("supply_run/client/client_controller.txt"):new()
    end)
    
    
    
--[[

    Things i need to know
        - display stuff
            - shop names
            - products
            - jobs    
        
            - my balance
        
    
    
    
    local ShopDisplay = require("supply_run/client/shop_display.txt")
    local shopDisplay = ShopDisplay:new()
    
    hook.add("render", "screenRender", function()
        shopDisplay:updateScreenRender()
    end)
    
    hook.add("starfallUsed", "turnScreenOn", function(activator, used)
        shopDisplay:turnScreenOn(activator, used)
    end)
    
    net.receive("screenInfo", function()
        shopDisplay:handleNetReceive()
    end)
    
]]
    
end
