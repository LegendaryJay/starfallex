--@name Job Manager
--@author Lil'Tugboat
--@include https://raw.githubusercontent.com/Jacbo1/Public-Starfall/main/SafeNet/safeNet.lua as SafeNet
--@shared

local net = require("SafeNet")
local JobManager = class("ProductManager")

function JobManager:initialize(products)
    self.products = products or {}
    
    if SERVER then 
        net.receive("requestJobs", function(_, ply)
            net.start("jobs")
                net.writeTable(self.jobs)
            net.send(ply)
        end)
        self:generateJobData()
    else
        net.start("requestJobs")
        net.send()
        
        net.receive("jobs", function()
            self.jobs = net.readTable()
        end)
    end
end

    
function JobManager:generateJobData()
    for index, job in ipairs(self.products) do
        job.index = index
    end
end
    
function JobManager:getJob(index)
    return self.products[index]
end


function JobManager:getJobs()
    return self.jobs
end

function JobManager:getJobsByDest(destination)
    local filteredJobs = {}
    for key, job in pairs(self.jobs) do
        if job.destination == destination then
            table.insert(filteredJobs, job)
        end
    end
    return filteredJobs
end

return ProductManager
