--@name coin magnet!
--@version 2.1
--@server

local coins = {}
local originalPos
local originalAng
local posOffset
local lastTime = 0

local function findCoins()
    return find.all(function(ent) return string.startWith(ent:getClass(), "bs_gear") and not ent:getPos():isZero() end)
end

local function interactWithCoins()
    local running = false
    while true do
        if #coins == 0 then
            coins = findCoins()
            if #coins == 0 then
                if running then
                    concmd("-use")
                    owner():setPos(originalPos)
                    running = false
                end
                print("No coins left")
                chip():remove()
                coroutine.yield()
            end
        end

        for i = #coins, 1, -1 do
            local coin = coins[i]
            if coin and coin:isValid() then
                if not running then
                    posOffset = owner():getPos() - owner():getEyePos()
                    originalPos = owner():getPos()
                    originalAng = owner():getEyeAngles()
                    concmd("+use") 
                    running = true
                end
                owner():setPos(coin:getPos() + posOffset - originalAng:getForward() * 5)
                coroutine.yield()  -- Yield to allow the game to process the movement

                if not coin:isValid() then
                    table.remove(coins, i)
                    print("Coin collected!")
                else
                    table.insert(coins, table.remove(coins, i))  -- Move coin to the end of the list
                end
            else
                table.remove(coins, i)  -- Remove invalid coin from the list
            end
        end
    end
end

local co = coroutine.create(interactWithCoins)
hook.add("think", "coin_check", function()
    if coroutine.status(co) ~= "dead" then
        coroutine.resume(co)
    end
end)