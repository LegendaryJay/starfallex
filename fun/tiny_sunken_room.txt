--@name Tiny Sunken Room
--@author Lil'Tugboat
--@model models/props_c17/metalladder002b.mdl
--@shared

if SERVER then
    local chip = chip()
    local vec, ang = localToWorld(Vector(48, 25, 0), Angle(0, 90, 0), chip:getPos(), chip:getAngles())
    local screen = prop.createComponent(vec, ang, "starfall_screen", "models/sprops/rectangles_superthin/size_6/rect_96x96.mdl", true) 
    screen:linkComponent(chip)
    screen:setNocollideAll(true)
    screen:setMass(999)
    screen:setMaterial("models/shadertest/predator")
    constraint.weld(screen, chip)
    chip:setFrozen(false)
    --screen:setParent(chip)
    
    

else
    local screen
    
    local wallMat = "models/props_animated_breakable/smokestack/brickwall002a"
    local floorMat = "sprops/textures/sprops_metal6"
    local outsideLadder
    local props = {
        {  -- floor
            model = "models/sprops/rectangles_superthin/size_6/rect_96x96.mdl",
            angles = Angle(0, 0, 0),
            position = Vector(0, 0, 0),
            mat = floorMat
        },
        {   -- back
            model = "models/sprops/rectangles_superthin/size_6/rect_96x96.mdl",
            angles = Angle(-90, 0, 90),
            position = Vector(0, -48, 48),
            mat = wallMat
        },
        {   --left
            model = "models/sprops/rectangles_superthin/size_6/rect_96x96.mdl",
            angles = Angle(90, 0, 0),
            position = Vector(48, 0, 48),
            mat = wallMat
        },
        {   -- right
            model = "models/sprops/rectangles_superthin/size_6/rect_96x96.mdl",
            angles = Angle(90, 0, 0),
            position = Vector(-48, 0, 48),
            mat = wallMat
        },

        {   -- front
            model = "models/sprops/rectangles_superthin/size_6/rect_96x96.mdl",
            angles = Angle(90, 0, -90),
            position = Vector(0, 48, 48),
            mat = wallMat
        },

        {   -- Painting
            model = "models/maxofs2d/gm_painting.mdl",
            angles = Angle(0, 90, 0),
            position = Vector(0, -48, 55)
        },
        {   -- Guitar
            model = "models/props_phx/misc/fender.mdl",
            angles = Angle(80, 0, 0),
            position = Vector(-45.5, 20, 27)
        },
        { 
            model = "models/items/item_item_crate.mdl",
            angles = Angle(0, -180, 0),
            position = Vector(25, -30, 0)
        },
        { 
            model = "models/props_interiors/furniture_couch02a.mdl",
            angles = Angle(0, 45, 0),
            position = Vector(-25, 48-63, 21.5)
        },
    
        {   -- upright shoe
            model = "models/props_junk/shoe001a.mdl",
            angles = Angle(0, 4, 0),
            position = Vector(38, 12, 5)
        },
        {   -- fallen shoe
            model = "models/props_junk/shoe001a.mdl",
            angles = Angle(-5, -30, 75),
            position = Vector(33, -4, 2)
        },
        { 
            model = "models/props_lab/corkboard001.mdl",
            angles = Angle(0, -180, 0),
            position = Vector(48, 0, 48)
        },
        {   -- bih jug
            model = "models/props_junk/glassjug01.mdl",
            angles = Angle(-1, 143, 0),
            position = Vector(1, -37, 0)
        },
        {   -- left
            model = "models/props_junk/glassbottle01a.mdl",
            angles = Angle(0, 50, 0),
            position = Vector(32, -35, 30)
        },
        {   -- right
            model = "models/props_junk/glassbottle01a.mdl",
            angles = Angle(0, 62, 0 ),
            position = Vector(25, -41, 30)
        },
        {   -- back
            model = "models/props_junk/popcan01a.mdl",
            angles = Angle(0, -3, 10),
            position = Vector(19, -32, 27.2)
        },
        {   -- ledge
            model = "models/props_junk/popcan01a.mdl",
            angles = Angle(0, 97, 0),
            position = Vector(10, -28, 27.4)
        },
        {   -- front left
            model = "models/props_junk/popcan01a.mdl",
            angles = Angle(0, 45, 0),
            position = Vector(19, -22, 26.8)
        },
        {   -- fallen
            model = "models/props_junk/popcan01a.mdl",
            angles = Angle(30, 18, 90),
            position = Vector(15, -36, 25.5)
        },
        {   -- front right
            model = "models/props_junk/popcan01a.mdl",
            angles = Angle(0, 45, 0),
            position = Vector(16, -24, 26.8)
        },
        { 
            model = "models/maxofs2d/companion_doll.mdl",
            angles = Angle(0, 70, 0),
            position = Vector(-25, -15, 16.5)
        },
        
        {   -- 
            model = "models/sprops/rectangles_thin/size_1/rect_3x96x1_5.mdl",
            mat = "sprops/textures/sprops_rubber2",
            angles = Angle(0, 0, 90),
            position = Vector(0, -47.26, 96.75),
            draw = true
        },
        {   -- 
            model = "models/sprops/rectangles_thin/size_1/rect_3x96x1_5.mdl",
            mat = "sprops/textures/sprops_rubber2",
            angles = Angle(0, 0, 90),
            position = Vector(0, 47.26, 96.75),
            draw = true
        },

        {   -- 
            model = "models/sprops/rectangles_thin/size_1/rect_3x96x1_5.mdl",
            mat = "sprops/textures/sprops_rubber2",
            angles = Angle(0, 90, 90),
            position = Vector(47.26, 0, 96.75),
            draw = true
        },
        {   -- 
            model = "models/sprops/rectangles_thin/size_1/rect_3x96x1_5.mdl",
            mat = "sprops/textures/sprops_rubber2",
            angles = Angle(0, 90, 90),
            position = Vector(-47.26, 0, 96.75),
            draw = true
        },
        {  -- tall ladder inside
            model = "models/props_c17/metalladder002.mdl",
            angles = Angle(0, -90, 0),
            position = Vector(-25, 48, -16),
            parent = chip()
            
        },  
        {   -- tall ladder outside
            model = "models/props_c17/metalladder002.mdl",
            angles = Angle(0, -90, 0),
            position = Vector(-25, 48, -16),
            draw = true,
            func = function(index, holo)
                outsideLadder = holo
            end,
            parent = chip()
        },
    }

    
    local holos = {}
    

    function spawnHolos()
        local holoOffset = Vector(0,0,-96)
        for i, p in ipairs(props) do
            local vec, ang = localToWorld(p.position + holoOffset, p.angles, screen:obbCenterW(), screen:getAngles())
            local holo = hologram.create(vec, ang, p.model)
            holos[i] = holo
            if not p.draw then
                holos[i]:setNoDraw(true)
            end
            
            if p.mat then holos[i]:setMaterial(p.mat) end
            
            if p.func then
                p.func(i, holos[i])
            end
            
            local parent = p.parent or screen
            holos[i]:setParent(parent)
        end
    end
    
    function draw()
        outsideLadder:setClip(1, true, screen:getPos(), screen:getUp())
        for index, holo in ipairs( holos ) do
            holo:draw()
        end
    end
    
    function spawnHoloHook()
            spawnHolos()
            hook.remove("think", "spawnProps")
            hook.add("render", "roomrender", draw)
    end
    function getScreenHook()
        screen = render:getScreenEntity()
        hook.remove("render", "firstRun")
        hook.add("think", "spawnProps", spawnHoloHook)
    end
    
    hook.add("render", "firstRun", getScreenHook) 

end